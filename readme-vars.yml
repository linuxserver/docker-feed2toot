---

# project information
project_name: feed2toot
project_url: "https://gitlab.com/chaica/feed2toot"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/feed2toot-banner.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# development version
development_versions: false
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - {env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London."}
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Persistent config files"}
param_usage_include_ports: false
param_device_map: false
cap_add_param: false
# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "FEED_LIMIT", env_value: "5", desc: "Limit number of RSS entries published at each execution."}
opt_param_usage_include_vols: false
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Run `docker run --rm -it -w /config -v /path/to/data:/config -e PUID=1000 -e PGID=1000 lscr.io/linuxserver/feed2toot /lsiopy/bin/register_feed2toot_app` to generate credential files (be sure to set the correct volume path and PUID/PGID values).

  Edit the feed2toot.ini in /config to configure your instance name and RSS feeds.

  See the [feed2toot docs](https://feed2toot.readthedocs.io/en/latest/) for more information.
# init diagram
init_diagram: |
  "feed2toot:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-config -> init-config-end
    init-feed2toot-config -> init-config-end
    init-os-end -> init-crontab-config
    init-mods-end -> init-custom-files
    base -> init-envfile
    init-config -> init-feed2toot-config
    base -> init-migrations
    base -> init-mods
    init-config-end -> init-mods
    init-mods -> init-mods-end
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    base -> init-os-end
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-migrations -> init-os-end
    init-custom-files -> init-services
    init-mods-end -> init-services
    init-services -> svc-cron
    svc-cron -> legacy-services
  }
  Base Images: {
    "baseimage-alpine:3.19"
  }
  "feed2toot:latest" <- Base Images
# changelog
changelogs:
  - {date: "23.12.23:", desc: "Rebase to Alpine 3.19."}
  - {date: "25.05.23:", desc: "Rebase to Alpine 3.18, deprecate armhf."}
  - {date: "02.03.23:", desc: "Allow user customizable cron."}
  - {date: "22.12.22:", desc: "Rebase to alpine 3.17."}
  - {date: "14.11.22:", desc: "Initial Release."}
